[{"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\index.js":"1","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\App.js":"3","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\codeinjection.js":"4","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\components\\Modal.js":"5","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\screens\\LoginScreen.js":"7","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\data.js":"8","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\components\\Card.js":"9"},{"size":613,"mtime":1645651336262,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1645651336270,"results":"12","hashOfConfig":"11"},{"size":3672,"mtime":1648521439993,"results":"13","hashOfConfig":"11"},{"size":3337,"mtime":1645731980211,"results":"14","hashOfConfig":"11"},{"size":1237,"mtime":1648500402161,"results":"15","hashOfConfig":"11"},{"size":754,"mtime":1648500402162,"results":"16","hashOfConfig":"11"},{"size":2503,"mtime":1648521548208,"results":"17","hashOfConfig":"11"},{"size":3413,"mtime":1645651336258,"results":"18","hashOfConfig":"11"},{"size":741,"mtime":1645651336255,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"17d9we2",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\index.js",[],[],["51","52"],"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\App.js",["53","54"],[],"import React, { useEffect, useState } from 'react';\r\nimport * as injection from './codeinjection';\r\nimport './App.css';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport Modal from './components/Modal';\r\nimport data from './data';\r\n//import jwt from 'jsonwebtoken';\r\n\r\nfunction App() {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n  const [currentBookmarks, setCurrentBookmarks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  async function AddNewBookmark(newBookmark) {\r\n    if(!newBookmark) return;\r\n\r\n    const temp = [...currentBookmarks];\r\n    temp.push(newBookmark);\r\n\r\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type' : 'application/json',\r\n        'x-access-token': sessionStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify(temp),\r\n    });\r\n\r\n\r\n    const data = await req.json();\r\n    if(data.status === 'ok') {\r\n      //some Hook to set a new Bookmark\r\n      setCurrentBookmarks(data.bookmarks);\r\n    } else {\r\n      alert(data.error);\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  async function populateBookmarks() {\r\n    console.log(\"getting bookmarks\");\r\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\r\n      method: 'GET',\r\n      headers:{\r\n        'x-access-token': sessionStorage.getItem('token'),\r\n      },\r\n    });\r\n\r\n    const data = await req.json();\r\n    if(data.status === 'ok') {\r\n      //we were able to populate bookmarks\r\n      setCurrentBookmarks(data.bookmarks);\r\n    } else {\r\n      alert(data.error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if(!token) navigate('/Login-Signup');\r\n    else{\r\n      try{\r\n        populateBookmarks();\r\n      } catch(err)\r\n      {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n        <main>\r\n          <Modal displayModal={displayModal} onExit={() =>setDisplayModal(false)} onSubmit={AddNewBookmark}></Modal>\r\n          <header className=\"topnavmenu\">\r\n            <div className='top-tab left'>\r\n              <a href=\"/\"><img src=\"/images/file.png\" alt=\"My Pages\"/></a>\r\n            </div>\r\n            <div className='top-tab center'>\r\n              <button className='add-button' onClick={() => setDisplayModal(true)}><img src='/images/plus.png' alt='Add New Dogear'/></button>\r\n            </div>\r\n            <div className='top-tab right'>\r\n              <a href=\"/Login-Signup/\"><img src=\"/images/log-in.png\" alt=\"Log In\"/></a>\r\n              <a href=\"/\"><img src=\"/images/sign-up.png\" alt=\"Sign Up\"/></a>\r\n            </div>\r\n          </header>\r\n          <section className=\"leftnavmenu\">\r\n            <div className=\"page-icon\">\r\n              <img src=\"/images/distorted2.png\" alt=\"icon\"/>\r\n            </div>\r\n            <div className=\"page-icon\">\r\n              <img src=\"/images/distorted2.png\" alt=\"icon\"/>\r\n            </div>\r\n            <div className=\"page-icon\">\r\n              <img src=\"/images/distorted2.png\" alt=\"icon\"/>\r\n            </div>\r\n            <div className=\"page-icon\">\r\n              <button onClick={injection.CoolThingsILearned}>\r\n                <img src=\"/images/more.png\" alt=\"add page\"/>\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <Routes>\r\n            <Route path='/Login-Signup' element={<LoginScreen/>}/>\r\n            <Route path='/' element={<HomeScreen bookmarks={currentBookmarks}/>} exact/>\r\n          </Routes>\r\n        </main>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\codeinjection.js",["55"],[],"export function AddTwo(){\r\n    const mystring = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~ \"\r\nconsole.log(mystring.length);\r\n}\r\n\r\n//const mystring = \"Eat a bag of bagels\";\r\n\r\nexport function CoolThingsILearned()\r\n{\r\n    //const myconcat[] = mystring.substr(4,3);\r\n\r\n    const mystring = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~ \"\r\n    console.log(mystring.length);\r\n}\r\n\r\n\r\nexport function exampleURLFetch()\r\n{\r\n    // fetch('https://jsonplaceholder.typicode.com/todos/1', {\r\n    //     headers: {'Access-Control-Allow-Origin': '*'},\r\n    // })\r\n    //     .then(response => response.json())\r\n    //     .then(data =>console.log(data));\r\n\r\n    fetch('http://reddit.com', {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {}\r\n        })\r\n}\r\n\r\nexport function tutorialfetch()\r\n{\r\n    fetch('https://reqres.in/api/users', {\r\n        // method: 'POST',\r\n        // headers: {\r\n        //     'Content-Type' : 'application/json'\r\n        // },\r\n        // body: JSON.stringify({\r\n        //     name: 'User 1'\r\n        // })\r\n    })\r\n    .then(res => {\r\n        return res.json()\r\n    })\r\n    .then(data =>console.log(data))\r\n}\r\n\r\nexport function tutorialpromise()\r\n{\r\n    //really good when u need to do something that will take a long time in the background\r\n    //like downloading image from another server so you can do something else while u wait\r\n\r\n    let p = new Promise((resolve, reject) => {\r\n        let a = 1+1\r\n        if(a ==2){\r\n            resolve('Success')\r\n        }else{\r\n            reject('Failed')\r\n        }\r\n    })\r\n\r\n    p.then((message)=>{\r\n        console.log('This is in the then ' + message)\r\n    }).catch((message) => {\r\n        console.log('This is in the catch ' + message)\r\n    })\r\n}\r\n\r\nexport function tutorialAwait()\r\n{\r\n    let makeRequest = (location) => {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(`Making Request to ${location}`)\r\n            if(location === 'Google') {\r\n                resolve('Google says hi')\r\n            } else {\r\n                reject('We can only talk to Google')\r\n            }\r\n        })\r\n    };\r\n\r\n    let processRequest = (response) => {\r\n        return new Promise((resolve, reject) => {\r\n            console.log('Processing response')\r\n            resolve(`Extra Information + ${response}`)\r\n        })\r\n    };\r\n\r\n    // makeRequest('Google').then(response => {\r\n    //     console.log('Response Recieved')\r\n    //     return processRequest(response)\r\n    // }).then(processedResponse => {\r\n    //     console.log(processedResponse)\r\n    // }).catch(err => {\r\n    //     console.log(err)\r\n    // })\r\n\r\n    /*\r\n    asynchronous code must be wrapped in a function with the keyword async\r\n    also make sure you use await keywork before asynchronous calls otherwise it will \r\n    just return the promise and not actually return the result of that promise\r\n    */\r\n\r\n    let doWork = async () => {\r\n        try {\r\n        const response = await makeRequest('Google')\r\n        console.log('Response Received')\r\n        const processedResponse = processRequest(response)\r\n        console.log(processedResponse)\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    doWork()\r\n}","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\components\\Modal.js",["56","57"],[],"import React from 'react';\r\nimport { exampleURLFetch, tutorialfetch} from '../codeinjection';\r\n\r\nexport default function Modal(props)\r\n{\r\n    const {displayModal, onExit, onSubmit} = props;\r\n    const bookmark = {            \r\n        title: \"Placeholder\",\r\n        image: '/images/distorted2.png',\r\n        description: 'This is where the description of the card can be found. This will provide more context than the title but would still be limited to a short number of characters, maybe 150.',\r\n        tags: '#funny #weird #art',\r\n        url: 'https://www.youtube.com'\r\n    }\r\n\r\n    const submission = () => {\r\n        onSubmit(bookmark);\r\n        onExit();\r\n    }\r\n\r\n    return(\r\n        <div className={displayModal ? 'modal-bg display-flex' : 'modal-bg display-none'}>\r\n            <div className='create-post-modal'>\r\n                <button onClick={onExit}>Cancel</button>\r\n                <h2>Create a New Post</h2>\r\n                <div className='input-field'>\r\n                    <h3>Url:</h3>\r\n                    <input autoComplete='url' id='url' placeholder='url'></input>\r\n                </div>\r\n                <button onClick = {submission}>Example URL Fetch</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\screens\\HomeScreen.js",[],[],"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\screens\\LoginScreen.js",[],[],"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\data.js",[],[],"C:\\Users\\lukes\\Desktop\\FrontendMasters\\DogEar\\frontend\\src\\components\\Card.js",[],[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":71,"column":6,"nodeType":"68","endLine":71,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":56,"column":14,"nodeType":"72","messageId":"73","endLine":56,"endColumn":16},{"ruleId":"62","severity":1,"message":"74","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":25},{"ruleId":"62","severity":1,"message":"75","line":2,"column":27,"nodeType":"64","messageId":"65","endLine":2,"endColumn":40},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'exampleURLFetch' is defined but never used.","'tutorialfetch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [navigate]",{"range":"81","text":"82"},[1969,1971],"[navigate]"]