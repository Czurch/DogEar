{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\DogEar\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginScreen() {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch('https://dogearapp.herokuapp.com/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      alert('Registration successful');\n      navigate('/Login-Signup');\n    } else {\n      alert('Registration FAILED');\n    }\n  }\n\n  async function loginUser(event) {\n    event.preventDefault();\n    const response = await fetch('https://dogearapp.herokuapp.com/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.user) {\n      //document.cookie(`token: ${data.user}`);\n      sessionStorage.setItem('token', data.user); //localStorage.setItem('token', data.user);\n\n      alert('Login successful');\n      navigate('/');\n    } else {\n      alert('Incorrect username or password');\n    }\n\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        form: \"login-form\",\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerUser,\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginScreen, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/lukes/Desktop/FrontendMasters/DogEar/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useNavigate","LoginScreen","navigate","email","setEmail","password","setPassword","registerUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","loginUser","user","sessionStorage","setItem","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction LoginScreen() {\r\n  const navigate = useNavigate()\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function registerUser(event) {\r\n      event.preventDefault();\r\n      const response = await fetch('https://dogearapp.herokuapp.com/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if(data.status === 'ok') {\r\n        alert('Registration successful');\r\n        navigate('/Login-Signup')\r\n      }\r\n      else{\r\n        alert('Registration FAILED');\r\n      }\r\n    }\r\n\r\n    async function loginUser(event) {\r\n      event.preventDefault();\r\n      const response = await fetch('https://dogearapp.herokuapp.com/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if(data.user) {\r\n        //document.cookie(`token: ${data.user}`);\r\n        sessionStorage.setItem('token', data.user);\r\n        //localStorage.setItem('token', data.user);\r\n        alert('Login successful');\r\n        navigate('/');\r\n      } else {\r\n        alert('Incorrect username or password');\r\n      }\r\n\r\n      console.log(data);\r\n    }\r\n\r\n    return ( \r\n      <div className=\"login-modal\">\r\n        <form id='login-form' onSubmit={loginUser}>\r\n        <div className='input-field'>\r\n          <h3>Username:</h3>\r\n          <input \r\n          value={email} onChange={(e) => setEmail(e.target.value)} \r\n          type=\"email\" \r\n          id='email' \r\n          placeholder='Email'>\r\n          </input>\r\n        </div>\r\n        <div className='input-field'>\r\n          <h3>Password:</h3>\r\n          <input \r\n          value={password} onChange={(e) => setPassword(e.target.value)} \r\n          type=\"password\"\r\n          id='password' \r\n          placeholder='password'>\r\n          </input>\r\n        </div>\r\n        <button type=\"submit\" form='login-form'>LOG IN</button>\r\n        <h3 className='center'>OR</h3>  \r\n        <button onClick={registerUser}>SIGN UP</button>\r\n        </form>\r\n      </div> );\r\n}\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}