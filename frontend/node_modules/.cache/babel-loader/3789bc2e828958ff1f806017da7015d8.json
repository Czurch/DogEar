{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukes\\\\Desktop\\\\FrontendMasters\\\\DogEar\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as injection from './codeinjection';\nimport './App.css';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport Modal from './components/Modal';\nimport data from './data';\nimport TopNavBar from './components/TopNavBar';\nimport SideNavBar from './components/SideNavBar'; //import jwt from 'jsonwebtoken';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [displayModal, setDisplayModal] = useState(false);\n  const [currentBookmarks, setCurrentBookmarks] = useState([]);\n  const navigate = useNavigate();\n\n  async function AddNewBookmark(newBookmark) {\n    if (!newBookmark) return;\n    const temp = [...currentBookmarks];\n    temp.push(newBookmark);\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': sessionStorage.getItem('token')\n      },\n      body: JSON.stringify(temp)\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      //some Hook to set a new Bookmark\n      setCurrentBookmarks(data.bookmarks);\n    } else {\n      alert(data.error);\n    }\n\n    console.log(data);\n  }\n\n  async function populateBookmarks() {\n    console.log(\"getting bookmarks\");\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\n      method: 'GET',\n      headers: {\n        'x-access-token': sessionStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      //we were able to populate bookmarks\n      setCurrentBookmarks(data.bookmarks);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = sessionStorage.getItem('token');\n    if (!token) navigate('/Login-Signup');else {\n      try {\n        populateBookmarks();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      displayModal: displayModal,\n      onExit: () => setDisplayModal(false),\n      onSubmit: AddNewBookmark\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TopNavBar, {\n      setDisplayModal: setDisplayModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Login-Signup\",\n        element: /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomeScreen, {\n          bookmarks: currentBookmarks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 38\n        }, this),\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"micwjDMNNnUgPRXoOjo1Zbr4CS4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/lukes/Desktop/FrontendMasters/DogEar/frontend/src/App.js"],"names":["React","useEffect","useState","injection","Route","Routes","useNavigate","HomeScreen","LoginScreen","Modal","data","TopNavBar","SideNavBar","App","displayModal","setDisplayModal","currentBookmarks","setCurrentBookmarks","navigate","AddNewBookmark","newBookmark","temp","push","req","fetch","method","headers","sessionStorage","getItem","body","JSON","stringify","json","status","bookmarks","alert","error","console","log","populateBookmarks","token","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as injection from './codeinjection';\r\nimport './App.css';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport Modal from './components/Modal';\r\nimport data from './data';\r\nimport TopNavBar from './components/TopNavBar';\r\nimport SideNavBar from './components/SideNavBar';\r\n//import jwt from 'jsonwebtoken';\r\n\r\nfunction App() {\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n  const [currentBookmarks, setCurrentBookmarks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  async function AddNewBookmark(newBookmark) {\r\n    if(!newBookmark) return;\r\n\r\n    const temp = [...currentBookmarks];\r\n    temp.push(newBookmark);\r\n\r\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type' : 'application/json',\r\n        'x-access-token': sessionStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify(temp),\r\n    });\r\n\r\n\r\n    const data = await req.json();\r\n    if(data.status === 'ok') {\r\n      //some Hook to set a new Bookmark\r\n      setCurrentBookmarks(data.bookmarks);\r\n    } else {\r\n      alert(data.error);\r\n    }\r\n    console.log(data);\r\n  }\r\n\r\n  async function populateBookmarks() {\r\n    console.log(\"getting bookmarks\");\r\n    const req = await fetch('https://dogearapp.herokuapp.com/api/bookmarks', {\r\n      method: 'GET',\r\n      headers:{\r\n        'x-access-token': sessionStorage.getItem('token'),\r\n      },\r\n    });\r\n\r\n    const data = await req.json();\r\n    if(data.status === 'ok') {\r\n      //we were able to populate bookmarks\r\n      setCurrentBookmarks(data.bookmarks);\r\n    } else {\r\n      alert(data.error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if(!token) navigate('/Login-Signup');\r\n    else{\r\n      try{\r\n        populateBookmarks();\r\n      } catch(err)\r\n      {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n        <main>\r\n          <Modal displayModal={displayModal} onExit={() =>setDisplayModal(false)} onSubmit={AddNewBookmark}></Modal>\r\n          <TopNavBar setDisplayModal={setDisplayModal}></TopNavBar>\r\n          <SideNavBar></SideNavBar>\r\n          <Routes>\r\n            <Route path='/Login-Signup' element={<LoginScreen/>}/>\r\n            <Route path='/' element={<HomeScreen bookmarks={currentBookmarks}/>} exact/>\r\n          </Routes>\r\n        </main>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}