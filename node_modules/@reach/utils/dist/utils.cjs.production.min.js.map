{"version":3,"file":"utils.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["/* eslint-disable no-restricted-globals, eqeqeq,  */\n\nimport React, {\n  cloneElement,\n  createContext,\n  isValidElement,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport warning from \"warning\";\nimport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n} from \"./types\";\n\n/**\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\n * cause some issues for SSR users, whether the warning shows or not. Audit and\n * fix these.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */\nexport const useIsomorphicLayoutEffect = canUseDOM()\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nlet checkedPkgs: { [key: string]: boolean } = {};\n\n/**\n * When in dev mode, checks that styles for a given @reach package are loaded.\n *\n * @param packageName Name of the package to check.\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\n */\n// @ts-ignore\nlet checkStyles = (packageName: string): void => void packageName;\n\nif (__DEV__) {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  let { env } =\n    typeof process !== \"undefined\"\n      ? process\n      : { env: { NODE_ENV: \"development\" } };\n\n  checkStyles = (packageName: string) => {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (\n      env.NODE_ENV !== \"test\" &&\n      parseInt(\n        window\n          .getComputedStyle(document.body)\n          .getPropertyValue(`--reach-${packageName}`),\n        10\n      ) !== 1\n    ) {\n      console.warn(\n        `@reach/${packageName} styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import \"@reach/${packageName}/styles.css\";\n\n  Otherwise you'll need to include them some other way:\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/@reach/${packageName}/styles.css\" />\n\n  For more information visit https://ui.reach.tech/styling.\n  `\n      );\n    }\n  };\n}\n\nexport { checkStyles };\n\n/**\n * Passes or assigns an arbitrary value to a ref function or object.\n *\n * @param ref\n * @param value\n */\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | undefined,\n  value: any\n) {\n  if (ref == null) return;\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`);\n    }\n  }\n}\n\nexport function boolOrBoolString(value: any): value is \"true\" | true {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\n\nexport function canUseDOM() {\n  return (\n    typeof window !== \"undefined\" &&\n    typeof window.document !== \"undefined\" &&\n    typeof window.document.createElement !== \"undefined\"\n  );\n}\n\nexport function cloneValidElement<Props>(\n  element: React.ReactElement<Props> | React.ReactNode,\n  props?: Partial<Props> & React.Attributes,\n  ...children: React.ReactNode[]\n): React.ReactElement<Props> | React.ReactNode {\n  return isValidElement(element)\n    ? cloneElement(element, props, ...children)\n    : element;\n}\n\nexport function createNamedContext<ContextValueType>(\n  name: string,\n  defaultValue: ContextValueType\n): React.Context<ContextValueType> {\n  const Ctx = createContext<ContextValueType>(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n\n/**\n * Get the scrollbar offset distance.\n */\nexport function getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n  return 0;\n}\n\n/**\n * Joins strings to format IDs for compound components.\n *\n * @param args\n */\nexport function makeId(...args: (string | number | null | undefined)[]) {\n  return args.filter(val => val != null).join(\"--\");\n}\n\n/**\n * No-op function.\n */\nexport function noop(): void {}\n\n/**\n * React hook for creating a value exactly once.\n * @see https://github.com/Andarist/use-constant\n */\nexport function useConstant<ValueType>(fn: () => ValueType): ValueType {\n  const ref = React.useRef<{ v: ValueType }>();\n  if (!ref.current) {\n    ref.current = { v: fn() };\n  }\n  return ref.current.v;\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function useForkedRef<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | undefined)[]\n) {\n  return useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return (node: any) => {\n      refs.forEach(ref => {\n        assignRef(ref, node);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n/**\n * Returns the previous value of a reference after a component update.\n *\n * @param value\n */\nexport function usePrevious<ValueType = any>(value: ValueType) {\n  const ref = useRef<ValueType | null>(null);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n/**\n * Call an effect after a component update, skipping the initial mount.\n *\n * @param effect Effect to call\n * @param deps Effect dependency list\n */\nexport function useUpdateEffect(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n) {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\n/**\n * Wraps a lib-defined event handler and a user-defined event handler, returning\n * a single handler that allows a user to prevent lib-defined handlers from\n * firing.\n *\n * @param theirHandler User-supplied event handler\n * @param ourHandler Library-supplied event handler\n */\nexport function wrapEvent<EventType extends React.SyntheticEvent | Event>(\n  theirHandler: ((event: EventType) => any) | undefined,\n  ourHandler: (event: EventType) => any\n): (event: EventType) => any {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\n\n/**\n * This is a hack for sure. The thing is, getting a component to intelligently\n * infer props based on a component or JSX string passed into an `as` prop is\n * kind of a huge pain. Getting it to work and satisfy the constraints of\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\n * type song-and-dance every time we want to forward a ref into a component\n * that accepts an `as` prop, we abstract all of that mess to this function for\n * the time time being.\n *\n * TODO: Eventually we should probably just try to get the type defs above\n * working across the board, but ain't nobody got time for that mess!\n *\n * @param Comp\n */\nexport function forwardRefWithAs<Props, ComponentType extends As>(\n  comp: (\n    props: PropsFromAs<ComponentType, Props>,\n    ref: React.RefObject<any>\n  ) => React.ReactElement | null\n) {\n  return (React.forwardRef(comp as any) as unknown) as ComponentWithAs<\n    ComponentType,\n    Props\n  >;\n}\n\n/**\n * Get a computed style value by property, backwards compatible with IE\n * @param element\n * @param styleProp\n */\nexport function getElementComputedStyle(\n  element: HTMLElement & {\n    currentStyle?: Record<string, string>;\n  },\n  styleProp: string\n) {\n  let y: string | null = null;\n  let doc = getOwnerDocument(element);\n  if (element.currentStyle) {\n    y = element.currentStyle[styleProp];\n  } else if (\n    doc &&\n    doc.defaultView &&\n    isFunction(doc.defaultView.getComputedStyle)\n  ) {\n    y = doc.defaultView\n      .getComputedStyle(element, null)\n      .getPropertyValue(styleProp);\n  }\n  return y;\n}\n\nexport function getOwnerDocument<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  return element && element.ownerDocument\n    ? element.ownerDocument\n    : canUseDOM()\n    ? document\n    : null;\n}\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nexport let ponyfillGlobal =\n  typeof window != \"undefined\" && window.Math == Math\n    ? window\n    : typeof self != \"undefined\" && self.Math == Math\n    ? self\n    : // eslint-disable-next-line no-new-func\n      Function(\"return this\")();\n\nexport function isBoolean(value: any): value is boolean {\n  return typeof value === \"boolean\";\n}\n\nexport function isFunction(value: any): value is Function {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n\nexport function isNumber(value: any): value is number {\n  return typeof value === \"number\";\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\nexport function useControlledSwitchWarning(\n  controlPropValue: any,\n  controlPropName: string,\n  componentName: string\n) {\n  /*\n   * Determine whether or not the component is controlled and warn the developer\n   * if this changes unexpectedly.\n   */\n  let isControlled = controlPropValue != null;\n  let { current: wasControlled } = useRef(isControlled);\n  let effect = noop;\n  if (__DEV__) {\n    effect = function() {\n      warning(\n        !(!isControlled && wasControlled),\n        `\\`${componentName}\\` is changing from uncontrolled to be controlled. Reach UI components should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled \\`${componentName}\\` for the lifetime of the component. Check the \\`${controlPropName}\\` prop.`\n      );\n      warning(\n        !(!isControlled && wasControlled),\n        `\\`${componentName}\\` is changing from controlled to be uncontrolled. Reach UI components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled \\`${componentName}\\` for the lifetime of the component. Check the \\`${controlPropName}\\` prop.`\n      );\n    };\n  }\n  useEffect(effect, [componentName, controlPropName, isControlled]);\n}\n\n// Export types\nexport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n};\n"],"names":["useIsomorphicLayoutEffect","canUseDOM","React","useLayoutEffect","useEffect","assignRef","ref","value","isFunction","current","error","Error","window","document","createElement","noop","getOwnerDocument","element","ownerDocument","ponyfillGlobal","Math","self","Function","isBoolean","toString","call","packageName","props","children","isValidElement","cloneElement","name","defaultValue","Ctx","createContext","displayName","comp","forwardRef","styleProp","y","doc","currentStyle","defaultView","getComputedStyle","getPropertyValue","innerWidth","documentElement","clientWidth","err","args","filter","val","join","fn","useRef","v","controlPropValue","controlPropName","componentName","isControlled","refs","useMemo","every","node","forEach","effect","deps","mounted","theirHandler","ourHandler","event","defaultPrevented"],"mappings":"2KAkDaA,EAA4BC,IACrCC,EAAMC,gBACND,EAAME,mBA4DMC,EACdC,EACAC,MAEW,MAAPD,KACAE,EAAWF,GACbA,EAAIC,YAGFD,EAAIG,QAAUF,EACd,MAAOG,SACD,IAAIC,8BAA8BJ,eAAkBD,iBAShDL,UAEM,oBAAXW,aACoB,IAApBA,OAAOC,eAC2B,IAAlCD,OAAOC,SAASC,uBA+CXC,cAgJAC,EACdC,UAEOA,GAAWA,EAAQC,cACtBD,EAAQC,cACRjB,IACAY,SACA,SAIKM,EACQ,oBAAVP,QAAyBA,OAAOQ,MAAQA,KAC3CR,OACe,oBAARS,MAAuBA,KAAKD,MAAQA,KAC3CC,KAEAC,SAAS,cAATA,YAEUC,EAAUhB,SACA,kBAAVA,WAGAC,EAAWD,YACfA,GAAoC,qBAA3B,GAAGiB,SAASC,KAAKlB,0DA/NLA,SACd,SAAVA,KAA0BgB,EAAUhB,IAASA,2CAlEpC,SAACmB,wCA8EjBT,EACAU,8BACGC,mCAAAA,2BAEIC,iBAAeZ,GAClBa,6BAAab,EAASU,UAAUC,IAChCX,uCAIJc,EACAC,OAEMC,EAAMC,gBAAgCF,UAC5CC,EAAIE,YAAcJ,EACXE,qCAqIPG,UAKQlC,EAAMmC,WAAWD,6CAYzBnB,EAGAqB,OAEIC,EAAmB,KACnBC,EAAMxB,EAAiBC,UACvBA,EAAQwB,aACVF,EAAItB,EAAQwB,aAAaH,GAEzBE,GACAA,EAAIE,aACJlC,EAAWgC,EAAIE,YAAYC,oBAE3BJ,EAAIC,EAAIE,YACLC,iBAAiB1B,EAAS,MAC1B2B,iBAAiBN,IAEfC,2EAhKD3B,OAAOiC,WAAahC,SAASiC,gBAAgBC,mBACxCnC,OAAOiC,WAAahC,SAASiC,gBAAgBC,YAEtD,MAAOC,WACF,sEA0LgBzC,SACC,iBAAVA,6BAGSA,SACC,iBAAVA,wDAvLU0C,2BAAAA,yBACjBA,EAAKC,QAAO,SAAAC,UAAc,MAAPA,KAAaC,KAAK,4EAYPC,OAC/B/C,EAAMJ,EAAMoD,gBACbhD,EAAIG,UACPH,EAAIG,QAAU,CAAE8C,EAAGF,MAEd/C,EAAIG,QAAQ8C,+CAyKnBC,EACAC,EACAC,OAMIC,EAAmC,MAApBH,EACcF,SAAOK,GAcxCvD,YAbaW,EAaK,CAAC2C,EAAeD,EAAiBE,gEArLhDC,2BAAAA,yBAEIC,WAAQ,kBACTD,EAAKE,OAAM,SAAAxD,UAAc,MAAPA,KACb,KAEF,SAACyD,GACNH,EAAKI,SAAQ,SAAA1D,GACXD,EAAUC,EAAKyD,SAIlBH,qEAQwCrD,OACrCD,EAAMgD,SAAyB,aACrClD,aAAU,WACRE,EAAIG,QAAUF,IACb,CAACA,IACGD,EAAIG,0CAUXwD,EACAC,OAEMC,EAAUb,UAAO,GACvBlD,aAAU,WACJ+D,EAAQ1D,QACVwD,IAEAE,EAAQ1D,SAAU,IAGnByD,+BAYHE,EACAC,UAEO,SAAAC,MACLF,GAAgBA,EAAaE,IACxBA,EAAMC,wBACFF,EAAWC"}